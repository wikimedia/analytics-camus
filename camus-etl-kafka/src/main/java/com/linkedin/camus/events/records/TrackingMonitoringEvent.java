/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.camus.events.records;  
@SuppressWarnings("all")
/** An event to monitor the tracking system itself */
public class TrackingMonitoringEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TrackingMonitoringEvent\",\"namespace\":\"com.linkedin.camus.events.records\",\"doc\":\"An event to monitor the tracking system itself\",\"fields\":[{\"name\":\"header\",\"type\":{\"type\":\"record\",\"name\":\"EventHeader\",\"doc\":\"The basic header for every tracking event.\",\"fields\":[{\"name\":\"memberId\",\"type\":\"int\",\"doc\":\"The member id of the user initiating the action\"},{\"name\":\"time\",\"type\":\"long\",\"doc\":\"The time of the event\"},{\"name\":\"server\",\"type\":\"string\",\"doc\":\"The name of the server\"},{\"name\":\"service\",\"type\":\"string\",\"doc\":\"The name of the service\"},{\"name\":\"guid\",\"type\":{\"type\":\"fixed\",\"name\":\"Guid\",\"size\":16},\"doc\":\"A unique identifier for the message\"},{\"name\":\"treeId\",\"type\":[\"null\",{\"type\":\"fixed\",\"name\":\"fixed_16\",\"size\":16}],\"doc\":\"Service call tree uuid\",\"default\":null},{\"name\":\"requestId\",\"type\":[\"null\",\"int\"],\"doc\":\"Service call request id\",\"default\":null},{\"name\":\"impersonatorId\",\"type\":[\"null\",\"string\"],\"doc\":\"this is the ID of the CS Agent or Application acting on the users behalf\",\"default\":null}]}},{\"name\":\"tier\",\"type\":\"string\",\"doc\":\"A name for the tier of servers to which this event belongs (client, broker, etc)\"},{\"name\":\"eventType\",\"type\":\"string\",\"doc\":\"The event type being monitored\"},{\"name\":\"count\",\"type\":\"long\",\"doc\":\"The number of events sent in this time period\"},{\"name\":\"beginTimestamp\",\"type\":\"long\",\"doc\":\"The timestamp at which this count began\"},{\"name\":\"endTimestamp\",\"type\":\"long\",\"doc\":\"The timestamp at which this count ended\"}]}");
  @Deprecated public com.linkedin.camus.events.records.EventHeader header;
  /** A name for the tier of servers to which this event belongs (client, broker, etc) */
  @Deprecated public java.lang.CharSequence tier;
  /** The event type being monitored */
  @Deprecated public java.lang.CharSequence eventType;
  /** The number of events sent in this time period */
  @Deprecated public long count;
  /** The timestamp at which this count began */
  @Deprecated public long beginTimestamp;
  /** The timestamp at which this count ended */
  @Deprecated public long endTimestamp;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return header;
    case 1: return tier;
    case 2: return eventType;
    case 3: return count;
    case 4: return beginTimestamp;
    case 5: return endTimestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: header = (com.linkedin.camus.events.records.EventHeader)value$; break;
    case 1: tier = (java.lang.CharSequence)value$; break;
    case 2: eventType = (java.lang.CharSequence)value$; break;
    case 3: count = (java.lang.Long)value$; break;
    case 4: beginTimestamp = (java.lang.Long)value$; break;
    case 5: endTimestamp = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'header' field.
   */
  public com.linkedin.camus.events.records.EventHeader getHeader() {
    return header;
  }

  /**
   * Sets the value of the 'header' field.
   * @param value the value to set.
   */
  public void setHeader(com.linkedin.camus.events.records.EventHeader value) {
    this.header = value;
  }

  /**
   * Gets the value of the 'tier' field.
   * A name for the tier of servers to which this event belongs (client, broker, etc)   */
  public java.lang.CharSequence getTier() {
    return tier;
  }

  /**
   * Sets the value of the 'tier' field.
   * A name for the tier of servers to which this event belongs (client, broker, etc)   * @param value the value to set.
   */
  public void setTier(java.lang.CharSequence value) {
    this.tier = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * The event type being monitored   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * The event type being monitored   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'count' field.
   * The number of events sent in this time period   */
  public java.lang.Long getCount() {
    return count;
  }

  /**
   * Sets the value of the 'count' field.
   * The number of events sent in this time period   * @param value the value to set.
   */
  public void setCount(java.lang.Long value) {
    this.count = value;
  }

  /**
   * Gets the value of the 'beginTimestamp' field.
   * The timestamp at which this count began   */
  public java.lang.Long getBeginTimestamp() {
    return beginTimestamp;
  }

  /**
   * Sets the value of the 'beginTimestamp' field.
   * The timestamp at which this count began   * @param value the value to set.
   */
  public void setBeginTimestamp(java.lang.Long value) {
    this.beginTimestamp = value;
  }

  /**
   * Gets the value of the 'endTimestamp' field.
   * The timestamp at which this count ended   */
  public java.lang.Long getEndTimestamp() {
    return endTimestamp;
  }

  /**
   * Sets the value of the 'endTimestamp' field.
   * The timestamp at which this count ended   * @param value the value to set.
   */
  public void setEndTimestamp(java.lang.Long value) {
    this.endTimestamp = value;
  }

  /** Creates a new TrackingMonitoringEvent RecordBuilder */
  public static com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder newBuilder() {
    return new com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder();
  }
  
  /** Creates a new TrackingMonitoringEvent RecordBuilder by copying an existing Builder */
  public static com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder newBuilder(com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder other) {
    return new com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder(other);
  }
  
  /** Creates a new TrackingMonitoringEvent RecordBuilder by copying an existing TrackingMonitoringEvent instance */
  public static com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder newBuilder(com.linkedin.camus.events.records.TrackingMonitoringEvent other) {
    return new com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for TrackingMonitoringEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TrackingMonitoringEvent>
    implements org.apache.avro.data.RecordBuilder<TrackingMonitoringEvent> {

    private com.linkedin.camus.events.records.EventHeader header;
    private java.lang.CharSequence tier;
    private java.lang.CharSequence eventType;
    private long count;
    private long beginTimestamp;
    private long endTimestamp;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.camus.events.records.TrackingMonitoringEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing TrackingMonitoringEvent instance */
    private Builder(com.linkedin.camus.events.records.TrackingMonitoringEvent other) {
            super(com.linkedin.camus.events.records.TrackingMonitoringEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.header)) {
        this.header = (com.linkedin.camus.events.records.EventHeader) data().deepCopy(fields()[0].schema(), other.header);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tier)) {
        this.tier = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.tier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventType)) {
        this.eventType = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.eventType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count)) {
        this.count = (java.lang.Long) data().deepCopy(fields()[3].schema(), other.count);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.beginTimestamp)) {
        this.beginTimestamp = (java.lang.Long) data().deepCopy(fields()[4].schema(), other.beginTimestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.endTimestamp)) {
        this.endTimestamp = (java.lang.Long) data().deepCopy(fields()[5].schema(), other.endTimestamp);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'header' field */
    public com.linkedin.camus.events.records.EventHeader getHeader() {
      return header;
    }
    
    /** Sets the value of the 'header' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setHeader(com.linkedin.camus.events.records.EventHeader value) {
      validate(fields()[0], value);
      this.header = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'header' field has been set */
    public boolean hasHeader() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'header' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearHeader() {
      header = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'tier' field */
    public java.lang.CharSequence getTier() {
      return tier;
    }
    
    /** Sets the value of the 'tier' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setTier(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.tier = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'tier' field has been set */
    public boolean hasTier() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'tier' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearTier() {
      tier = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'eventType' field */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }
    
    /** Sets the value of the 'eventType' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.eventType = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'eventType' field has been set */
    public boolean hasEventType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'eventType' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'count' field */
    public java.lang.Long getCount() {
      return count;
    }
    
    /** Sets the value of the 'count' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setCount(long value) {
      validate(fields()[3], value);
      this.count = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'count' field has been set */
    public boolean hasCount() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'count' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'beginTimestamp' field */
    public java.lang.Long getBeginTimestamp() {
      return beginTimestamp;
    }
    
    /** Sets the value of the 'beginTimestamp' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setBeginTimestamp(long value) {
      validate(fields()[4], value);
      this.beginTimestamp = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'beginTimestamp' field has been set */
    public boolean hasBeginTimestamp() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'beginTimestamp' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearBeginTimestamp() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'endTimestamp' field */
    public java.lang.Long getEndTimestamp() {
      return endTimestamp;
    }
    
    /** Sets the value of the 'endTimestamp' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder setEndTimestamp(long value) {
      validate(fields()[5], value);
      this.endTimestamp = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'endTimestamp' field has been set */
    public boolean hasEndTimestamp() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'endTimestamp' field */
    public com.linkedin.camus.events.records.TrackingMonitoringEvent.Builder clearEndTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public TrackingMonitoringEvent build() {
      try {
        TrackingMonitoringEvent record = new TrackingMonitoringEvent();
        record.header = fieldSetFlags()[0] ? this.header : (com.linkedin.camus.events.records.EventHeader) defaultValue(fields()[0]);
        record.tier = fieldSetFlags()[1] ? this.tier : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.eventType = fieldSetFlags()[2] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.count = fieldSetFlags()[3] ? this.count : (java.lang.Long) defaultValue(fields()[3]);
        record.beginTimestamp = fieldSetFlags()[4] ? this.beginTimestamp : (java.lang.Long) defaultValue(fields()[4]);
        record.endTimestamp = fieldSetFlags()[5] ? this.endTimestamp : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
