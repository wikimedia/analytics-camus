/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.camus.events;

@SuppressWarnings("all")
/** The basic header for every tracking event. */
public class EventHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
	public static final org.apache.avro.Schema SCHEMA$ = org.apache.avro.Schema
			.parse("{\"type\":\"record\",\"name\":\"EventHeader\",\"namespace\":\"com.linkedin.events\",\"fields\":[{\"name\":\"memberId\",\"type\":\"int\",\"doc\":\"The member id of the user initiating the action\"},{\"name\":\"time\",\"type\":\"long\",\"doc\":\"The time of the event\"},{\"name\":\"server\",\"type\":\"string\",\"doc\":\"The name of the server\"},{\"name\":\"service\",\"type\":\"string\",\"doc\":\"The name of the service\"},{\"name\":\"guid\",\"type\":{\"type\":\"fixed\",\"name\":\"Guid\",\"size\":16},\"doc\":\"A unique identifier for the message\"}]}");
	/** The member id of the user initiating the action */
	public int memberId;
	/** The time of the event */
	public long time;
	/** The name of the server */
	public java.lang.CharSequence server;
	/** The name of the service */
	public java.lang.CharSequence service;
	/** A unique identifier for the message */
	public com.linkedin.camus.events.Guid guid;

	public org.apache.avro.Schema getSchema() {
		return SCHEMA$;
	}

	// Used by DatumWriter. Applications should not call.
	public java.lang.Object get(int field$) {
		switch (field$) {
		case 0:
			return memberId;
		case 1:
			return time;
		case 2:
			return server;
		case 3:
			return service;
		case 4:
			return guid;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}

	// Used by DatumReader. Applications should not call.
	@SuppressWarnings(value = "unchecked")
	public void put(int field$, java.lang.Object value$) {
		switch (field$) {
		case 0:
			memberId = (java.lang.Integer) value$;
			break;
		case 1:
			time = (java.lang.Long) value$;
			break;
		case 2:
			server = (java.lang.CharSequence) value$;
			break;
		case 3:
			service = (java.lang.CharSequence) value$;
			break;
		case 4:
			guid = (com.linkedin.camus.events.Guid) value$;
			break;
		default:
			throw new org.apache.avro.AvroRuntimeException("Bad index");
		}
	}
}